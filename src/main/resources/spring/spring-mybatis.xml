<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 扫描service -->
	<context:component-scan base-package="cn.lf.shiro.service" />
	<context:component-scan base-package="cn.lf.shiro.dao" />
	<context:component-scan base-package="cn.lf.shiro.commons" />
	<context:component-scan base-package="cn.lf.shiro.aspect" />
	<context:component-scan base-package="cn.lf.oa.base" />
	<context:component-scan base-package="cn.lf.oa.management" />
	<context:component-scan base-package="cn.lf.oa.publicinfo" />
	<context:component-scan base-package="cn.lf.oa.instation" />
	<context:component-scan base-package="cn.lf.oa.personoffice" />
	<context:component-scan base-package="cn.lf.oa.sysmanager" />
	
	<!-- 数据库连接池 -->
	<bean name="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>20</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle">
			<value>20</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- spring整合mybatis （mybatis-spring项目提供整合类） -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="masterDataSource"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:/sqlmapping/**/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="masterDataSource"></property>
	</bean>

	<!-- 事务管理 属性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置切面 -->
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice"
			pointcut="execution(* cn.lf.shiro.service..*.*(..)) or execution(* cn.lf.oa.*.service..*.*(..))" />
	</aop:config>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="masterDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 同时开启注解自动代理 -->	
	<aop:aspectj-autoproxy />  
</beans>